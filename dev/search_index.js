var documenterSearchIndex = {"docs":
[{"location":"ShadowCasting/#Shadow-Casting","page":"Shadow Casting","title":"Shadow Casting","text":"","category":"section"},{"location":"ShadowCasting/#Introduction","page":"Shadow Casting","title":"Introduction","text":"","category":"section"},{"location":"ShadowCasting/","page":"Shadow Casting","title":"Shadow Casting","text":"For trees, we assume a their crown to be circular (approxiated by an octagon), whose normal is pointed towards the sun, with the center at the height of the tree minus the radius of the crown above the ground. This object is projected onto the plane.","category":"page"},{"location":"ShadowCasting/#API","page":"Shadow Casting","title":"API","text":"","category":"section"},{"location":"ShadowCasting/","page":"Shadow Casting","title":"Shadow Casting","text":"Pages = [\"ShadowCasting.md\"]","category":"page"},{"location":"ShadowCasting/","page":"Shadow Casting","title":"Shadow Casting","text":"Modules = [TreeLoaders]\nPages = [\"ShadowCasting.jl\"]","category":"page"},{"location":"ShadowCasting/#TreeLoaders.cast_shadow-Tuple{Any, Function, AbstractArray}","page":"Shadow Casting","title":"TreeLoaders.cast_shadow","text":"cast_shadow(tree_df, param_getter::Function, sun_direction::AbstractArray)\n\ncreates new DataFrame with the shadows of the trees in tree_df. Shadows are approximated by an octagon with normal direction along the sun_direction. The location and height of the center of the octagon are informed by the return values of param_getter, as well as the radius.\n\narguments\n\ntree_df: DataFrame with metadata of center_lat and center_lon and at least these columns:\npointgeom: ArchGDAL point in wsg84 crs (use apply_wsg_84! from CoolWalksUtils.jl)\nid: unique id for each tree\nparam_getter: Function taking a row of the DataFrame and returning a Tuple with:\n\n(x_location, y_location, height_of_crown_center, radius_of_crown)\n\n\n\n\n\n","category":"method"},{"location":"Nottingham/#Shadow-Casting","page":"Nottingham","title":"Shadow Casting","text":"","category":"section"},{"location":"Nottingham/#Introduction","page":"Nottingham","title":"Introduction","text":"","category":"section"},{"location":"Nottingham/","page":"Nottingham","title":"Nottingham","text":"We load the tree data from the open data server of the city concil of nottingham, available here: nottingham tree data.","category":"page"},{"location":"Nottingham/","page":"Nottingham","title":"Nottingham","text":"As there are a lot of duplicates in this dataset, we need to clean that up, which happens while loading load_nottingham_trees. During this process, we also drop a lot of irrelevant columns and create a few new ones.","category":"page"},{"location":"Nottingham/","page":"Nottingham","title":"Nottingham","text":"Due to the architecture of the shadow casting, we provide a user defined function which calculates the relevant data for calculating each trees shadow (x, y, height, radius) from every row in the loaded dataset. This allows for custom datasets to not be massively manipulated on loading, but rather enables the users to provide their own handlers working for their data.","category":"page"},{"location":"Nottingham/#API","page":"Nottingham","title":"API","text":"","category":"section"},{"location":"Nottingham/","page":"Nottingham","title":"Nottingham","text":"Pages = [\"Nottingham.md\"]","category":"page"},{"location":"Nottingham/","page":"Nottingham","title":"Nottingham","text":"Modules = [TreeLoaders]\nPages = [\"Nottingham.jl\"]","category":"page"},{"location":"Nottingham/#TreeLoaders.load_nottingham_trees-Tuple{Any}","page":"Nottingham","title":"TreeLoaders.load_nottingham_trees","text":"load_nottingham_trees(path; bbox=nothing)\n\nLoads tree data from nottingham. Downloaded from https://maps164.nottinghamcity.gov.uk/server/rest/services/OpenData/OpenData/MapServer/91.\n\nmerges the considerable amount of duplicate trees in the original dataset by distance (trees closer than 1e-4m are considered equal)\n\narguments\n\npath: Path to the file with the dataset\nbbox: named tuple with (minlon, minlat, maxlon, maxlat), specifying a clipping range for the TreeLoaders\n\nreturns\n\nDataFrame with multiple columns, most relevant :id, :lon, :lat, :pointgeom and multiple other ones with a lot of information about the tree geometry  and metadata keys \"center_lon\" and \"center_lat\" describing the center of the bounding box of all trees contained.\n\n\n\n\n\n","category":"method"},{"location":"Nottingham/#TreeLoaders.tree_param_getter_nottingham-Tuple{Any}","page":"Nottingham","title":"TreeLoaders.tree_param_getter_nottingham","text":"tree_param_getter_nottingham(row)\n\ncalculates the basic properies needed in the shadow casting algorithm based on a row of the nottingham dataset (loaded with load_nottingham_trees).\n\nreturns\n\ntuple with:\n\nx: first coordinate of the pointgeom\ny: second coordinate of the pointgeom\nheight of the center of the tree crown\nr: radius of the tree crown\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = TreeLoaders","category":"page"},{"location":"#TreeLoaders","page":"Home","title":"TreeLoaders","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for TreeLoaders.","category":"page"}]
}
